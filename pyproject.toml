[tool.poetry]
name = "phantombunch"
version = "2024.03.0"
description = "Python package for generating fake student data."
authors = ["Marijan Beg"]
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
]

[tool.poetry.dependencies]
python = ">=3.10"
pandas = "^2.2.1"
Faker = "^24.3.0"
pycountry = "^23.12.11"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules
# that overlap with the use of a formatter.
extend-select = [
    "E501", # line-too-long 
    "UP",   # pyupgrade
    "I",    # isort
    "D",    # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# Ignore pydocstyle tests for some files.
"__init__.py" = ["D"]
"phantombunch/tests/*" = ["D"]

[tool.coverage.run]
omit = ["phantombunch/tests/*.py"]

[tool.pytest.ini_options]
addopts = "-v --doctest-modules --junitxml=junit/test-results.xml --cov=phantombunch --cov-report=xml --cov-report=html"
