[tool.poetry]
name = "fakeitmakeit"
version = "2024.3.0"
description = "Python package for generating fake student data."
license = "BSD-3-Clause"
authors = ["Marijan Beg <m.beg@imperial.ac.uk>"]
readme = "README.md"
repository = "https://github.com/marijanbeg/fakeitmakeit"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.10"
pandas = "^2.2.1"
Faker = "^24.3.0"
pycountry = "^23.12.11"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
extend-select = [
    "E501", # line too long - not enabled by default
    "UP",   # pyupgrade
    "I",    # isort
    "D",    # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# Ignore pydocstyle tests for some files.
"__init__.py" = ["D"]
"fakeitmakeit/tests/*" = ["D"]

[tool.coverage.run]
omit = ["fakeitmakeit/tests/*.py"]

[tool.pytest.ini_options]
addopts = "-v -n auto --doctest-modules --junitxml=junit/test-results.xml --cov=fakeitmakeit --cov-report=xml --cov-report=html"
